" Jezen Thomas’ .vimrc
"   jezenthomas@gmail.com
"   jezenthomas.com
"
" Thanks to:
"   - Steve Losh
"   - Gary Bernhardt
"   - Amir Salihefendic
"   - Vincent Driessen
"   - Benjamin Reitzammer

" Init & Vundle {{{
set nocompatible
filetype off
set rtp+=~/dotfiles/.vim/bundle/vundle/
call vundle#rc()

" Need this for Vundle to work
Bundle 'gmarik/vundle'
" Gary Bernhardt’s colour scheme
Bundle 'quanganhdo/grb256'
set t_Co=256
colorscheme grb256

Bundle 'bling/vim-airline'
Bundle 'git://git.wincent.com/command-t.git'
Bundle 'rstacruz/sparkup', {'rtp': 'vim/'}
Bundle 'ack.vim'
Bundle 'tpope/vim-markdown'

filetype plugin indent on
" }}}

"Basic config " {{{
" This makes RVM work inside Vim.
set shell=bash
set lazyredraw
set autoread
set hidden
set viminfo=
" }}}

" UI " {{{
set relativenumber                " Show relative line numbers
syntax on                         " Enable syntax highlighting
set ruler                         " Show current position in status bar
set cursorline                    " Highlight current line
set synmaxcol=800                 " Don’t highlight lines longer than 800 chars
set wrap                          " Soft-wrap long lines
set linebreak
set showbreak=↪                   " Prefix linebreaks with this fancy arrow
set scrolloff=5                   " Keep at least 5 lines above/below
set title                         " Change terminal title
set showmode                      " Always show current mode
set laststatus=2                  " Make sure airline isn’t hidden
let g:airline_powerline_fonts = 1 " Custom airline font
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline_symbols.space = "\ua0"
set shortmess=atI                 " Hide intro message
set showcmd                       " Show command as it’s being typed
set list                          " Show invisible characters
set noerrorbells                  " Disable bells
set wildmenu                      " Enhance command-line completion
" }}}

" Editing " {{{
set et                            " Pressing TAB creates spaces instead
set tabstop=2
set shiftwidth=2
set backspace=indent,eol,start    " Allow backspace in insert mode
set lcs=tab:▸\ ,extends:❯,precedes:❮,nbsp:.,trail:·,eol:¬
set nobackup                      " Disable backups
set nowb                          " Disable write backups
set noswapfile                    " Disable swap files
set completeopt-=preview          " Disable scratch preview buffer
set ttyfast
set encoding=utf-8 nobomb         " Use UTF-8 without BOM
set nojoinspaces                  " Don’t double space after join
" }}}

" Convenience mappings " {{{
"---------------------------
" Better than `,` since `-` is useless anyway
let mapleader="-"
" Clean trailing whitespace
nnoremap <leader>w mz:%s/\s\+$//<cr>:let @/=''<cr>`z
" Stop opening man pages
nnoremap K <nop>
" Fast saving
nmap <leader>s :w!<cr>
" Save as super user
noremap <leader>S :w !sudo tee % > /dev/null<CR>
" Fast quit
nmap <leader>q :q<cr>
" Fast escape
inoremap jj <ESC>
" Jump to beginning of line
noremap H 0
" Jump to end of line
noremap L $
" Toggle paste mode
map <leader>pp :setlocal paste!<cr>
" Select all
nnoremap vaa ggVG
" Emoticons
iabbrev ldis ಠ_ಠ
iabbrev lsir ಠ_ರೃ
iabbrev lhap ツ
iabbrev fliptable （╯°□°）╯ ┻━┻
" Switch tabs with ctrl+direction
map <C-l> :tabn<cr>
map <C-h> :tabp<cr>
map <C-t> :tabnew<cr>
" }}}

" Searching " {{{
set showmatch                     " Show matching bracket when under cursor
set hlsearch                      " Highlight search results
set ignorecase                    " Ignore case when searching
set smartcase                     " Case-sensitive if pattern includes uppercase
set incsearch                     " Highlight dynamically while typing

" Clear the higlighted search results
nnoremap <cr> :nohlsearch<cr>
" Ack results in quickfix window
nnoremap <leader>A :Ack
" Keep search matches in middle of window
nnoremap n nzzzv
nnoremap N Nzzzv

" Ignore stuff from Command-T
set wildignore=bower_components,_bower_components,node_modules,*.jpg,*.png,*.gif,play-2.*,app/protobuf,target,ghostdriver
" }}}

" Folding " {{{
set foldmethod=marker " Use three curly braces
" Toggle folds with Space
nnoremap <Space> za
vnoremap <Space> za
" }}}

" Automatic commands " {{{
if has("autocmd")
  " Enable file type detection
  filetype on
  " Treat .json files as .js
  autocmd BufNewFile,BufRead *.json setfiletype json syntax=javascript
endif

" Make sure Vim returns to the same line when reopening a file
augroup line_return
  au!
  au BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \     execute 'normal! g`"zvzz' |
    \ endif
augroup END
" }}}
